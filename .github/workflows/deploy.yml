name: Deploy to VPS

on:
  push:
    branches:
      - live
  workflow_dispatch:

jobs:
  deploy-backend:
    name: Build & Deploy Backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout backend
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install & Test Backend
        working-directory: backend
        run: npm ci

      - name: SSH & Deploy Backend
        uses: appleboy/ssh-action@master
        with:
          host:     ${{ secrets.REMOTE_HOST }}
          username: root
          password: ${{ secrets.REMOTE_PASS }}
          port:     22
          script: |
            cd /var/www/sharpai/backend
            git config --local --add safe.directory .
            git fetch --all --prune
            git reset --hard origin/live
            rm -rf node_modules
            npm ci --production --unsafe-perm
            pm2 reload sharpai-backend --update-env \
              || pm2 start index.js --name sharpai-backend --instances max --exec_mode cluster --update-env
            pm2 save

  deploy-frontend:
    name: Build & Deploy Frontend
    needs: deploy-backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install & Build Frontend
        working-directory: frontend
        run: |
          rm -rf node_modules package-lock.json
          npm install
          npm run build

      - name: Clean remote frontend folder
        uses: appleboy/ssh-action@master
        with:
          host:     ${{ secrets.REMOTE_HOST }}
          username: root
          password: ${{ secrets.REMOTE_PASS }}
          port:     22
          script: |
            rm -rf /var/www/sharpai/frontend/dist/*

      - name: Copy Frontend dist to VPS
        uses: appleboy/scp-action@master
        with:
          host:      ${{ secrets.REMOTE_HOST }}
          username:  root
          password:  ${{ secrets.REMOTE_PASS }}
          port:      22
          source:    "frontend/dist"            # copy the whole dir
          target:    "/var/www/sharpai" # into the parent dir
          recursive: true                       # recurse directories

      - name: Fix perms & reload Nginx
        uses: appleboy/ssh-action@master
        with:
          host:     ${{ secrets.REMOTE_HOST }}
          username: root
          password: ${{ secrets.REMOTE_PASS }}
          port:     22
          script: |
            chown -R www-data:www-data /var/www/sharpai/frontend/dist
            nginx -t && systemctl reload nginx
